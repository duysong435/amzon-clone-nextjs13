datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  isAdmin   Boolean?
  lastName  String?
  orders    Order[]
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Product {
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      String?
  colors          String
  createdAt       DateTime  @default(now())
  description     Json
  discountedPrice Float
  id              String    @id @default(cuid())
  images          Json
  order           Order?    @relation(fields: [orderId], references: [id])
  orderId         String?
  reviews         Review[]
  title           String
  titlePrice      Float
  updatedAt       DateTime  @updatedAt
  vatiants        Json?
}

model Category {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String?
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Review {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  rating    Int
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Order {
  createdAt     DateTime         @default(now())
  id            String           @id @default(cuid())
  paymentIntent String?
  paymentStatus Boolean?
  price         Float?
  products      Product[]
  status        EnumOrderStatus?
  updatedAt     DateTime         @updatedAt
  user          User?            @relation(fields: [userId], references: [id])
  userId        String?
}

enum EnumOrderStatus {
  Option1
}
